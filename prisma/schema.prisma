// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstName String @unique @map("first_name")
  lastName  String @unique @map("last_name")

  avatar   String  @default("/defualt_avatar.jpg")
  email    String  @unique
  password String
  isBanned Boolean @default(false)

  role EnumRole @default(USER)

  questions Question[]
  answers   Answer[]
  homeworks Homework[]
}

enum EnumRole {
  ADMIN
  USER
}

model Lesson {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url         String
  title       String           @unique
  description String?
  status      EnumStatusLesson @default(NOT_VIEWED)

  questions Question[]

  homeworks Homework[]

  topic   Topic? @relation(fields: [topicId], references: [id])
  topicId Int
}

enum EnumStatusLesson {
  NOT_VIEWED
  VIEWED_NOT_SUBMITTED_HOMEWORK
  COMPLETED
}

model Topic {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lessons Lesson[]

  title String
}

model Homework {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lesson   Lesson @relation(fields: [lessonId], references: [id])
  lessonId Int

  url     String
  comment String?

  status     EnumStatus     @default(PENDING)
  estimation EnumEstimation @default(NOT_ESTIMATED)

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

enum EnumEstimation {
  EXCELLENT
  GOOD
  AVERAGE
  POOR
  FAIL
  NOT_ESTIMATED
}

enum EnumStatus {
  PENDING
  CANCELLED
  APPRECIATED
}

model Question {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int

  lesson   Lesson @relation(fields: [lessonId], references: [id])
  lessonId Int

  comment String

  answers Answer[]
}

model Answer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int

  question   Question @relation(fields: [questionId], references: [id])
  questionId Int

  comment String
}

model RefreshTokens {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int
  token  String
  agent  String
}
